% Generated by roxygen2 (4.0.1): do not edit by hand
\name{typed-assign}
\alias{array<-}
\alias{atomic<-}
\alias{call<-}
\alias{character<-}
\alias{check<-}
\alias{complex<-}
\alias{data.frame<-}
\alias{double<-}
\alias{envir<-}
\alias{expression<-}
\alias{factor<-}
\alias{fun<-}
\alias{integer<-}
\alias{language<-}
\alias{list<-}
\alias{logical<-}
\alias{matrix<-}
\alias{name<-}
\alias{null<-}
\alias{numeric<-}
\alias{object<-}
\alias{pairlist<-}
\alias{raw<-}
\alias{recursive<-}
\alias{symbol<-}
\alias{table<-}
\alias{typed-assign}
\alias{vector<-}
\title{Assign with type checking}
\usage{
atomic(x, ...) <- value

integer(x, ...) <- value

numeric(x, ...) <- value

double(x, ...) <- value

logical(x, ...) <- value

character(x, ...) <- value

raw(x, ...) <- value

complex(x, ...) <- value

matrix(x, ...) <- value

array(x, ...) <- value

list(x, ...) <- value

pairlist(x, ...) <- value

envir(x, ...) <- value

name(x, ...) <- value

symbol(x, ...) <- value

call(x, ...) <- value

factor(x, ...) <- value

fun(x, ...) <- value

expression(x, ...) <- value

language(x, ...) <- value

object(x, ...) <- value

table(x, ...) <- value

recursive(x, ...) <- value

vector(x, ...) <- value

data.frame(x, ...) <- value

null(x, ...) <- value

check(x, ...) <- value
}
\arguments{
\item{x}{symbol}

\item{...}{additional conditions taking the following forms:

    1. \code{fun = v}, i.e. \code{fun(x)} must be equal \code{v}.

    2. \code{cond}, i.e. \code{cond(x)} must be \code{TRUE}.

    3. a \code{function} like \code{function(x) mean(x) <= 5.0}}

\item{value}{value to be assigned}
}
\description{
Assign with type checking
}
\examples{
\dontrun{
x <- 10L
atomic(x) <- 20
numeric(x) <- 10
numeric(x, length = 10L) <- 1:10

cond1 <- function(x) mean(x) <= 5
numeric(x, cond1) <- 0:9
}
}

