{"name":"rtype","tagline":"A strong type system for R","body":"\r\n\r\n# rtype\r\n\r\n[![Build Status](https://travis-ci.org/renkun-ken/rtype.png?branch=master)](https://travis-ci.org/renkun-ken/rtype)\r\n\r\nrtype is a strong type system for R which supports symbol declaration and assignment with type checking.\r\n\r\n[Release notes](https://github.com/renkun-ken/rtype/releases)\r\n\r\n## Installation\r\n\r\n```r\r\ndevtools::install_github(\"rtype\",\"renkun-ken\")\r\n```\r\n\r\n## Getting started\r\n\r\n### Declaring symbols\r\n\r\nDeclare symbols Before using them.\r\n\r\n\r\n```r\r\nlibrary(rtype)\r\ndeclare(x,y=numeric(),z=logical())\r\nls.str()\r\n```\r\n\r\n```\r\nx :  NULL\r\ny :  num(0) \r\nz :  logi(0) \r\n```\r\n\r\n### Assignment with type checking\r\n\r\n\r\n```r\r\n# NULL symbol can be assigned any value\r\nnumeric(x) <- c(1,2,3.5)\r\n\r\n# numeric symbol can be assigned only numeric value\r\n# is.numeric(y) = TRUE, and is.numeric(c(1,2,3)) = TRUE\r\nnumeric(y) <- c(1,2,3)\r\n\r\n# the symbol does not take value that violates its type checking\r\n# is.integer(y) = FALSE (violation)\r\ninteger(y) <- c(1L,2L)\r\n```\r\n\r\n```\r\nError: symbol fails type checking with .Primitive(\"is.integer\")\r\n```\r\n\r\n```r\r\n# the assignment fails if the value does not pass type checking\r\n# is.logical(z) = TRUE, but is.logical(c(1,2,3)) = FALSE (violation)\r\nlogical(z) <- c(1,2,3)\r\n```\r\n\r\n```\r\nError: value fails type checking with .Primitive(\"is.logical\")\r\n```\r\n\r\n### Assignment with condition checking\r\n\r\nChecking single condition\r\n\r\n\r\n```r\r\n# assign value checking condition length = 3\r\nnumeric(x, length = 3) <- c(1,2,3)\r\n\r\n# stop if condition is violated\r\nnumeric(x, length = 3) <- c(1,2,3,4)\r\n```\r\n\r\n```\r\nError: value [length = 4L] violates condition [length = 3]\r\n```\r\n\r\n\r\nChecking multiple conditions\r\n\r\n\r\n```r\r\n# assign value checking multiple conditions\r\ndeclare(df)\r\ndata.frame(df, ncol=2, nrow=10) <- data.frame(x=1:10,y=letters[1:10])\r\n# or equivalently\r\ndata.frame(df, dim=c(10,2)) <- data.frame(x=1:10,y=letters[1:10])\r\n\r\n# stop if any condition is violated\r\ndata.frame(df, ncol=3, nrow=10) <- data.frame(x=1:10,y=letters[1:10])\r\n```\r\n\r\n```\r\nError: value [ncol = 2L] violates condition [ncol = 3]\r\n```\r\n\r\nChecking function conditions\r\n\r\n\r\n```r\r\n# checking function condition\r\ndeclare(x)\r\ncond1 <- function(x) mean(x) <= 5\r\nnumeric(x, length = 10, cond1) <- 0:9\r\nnumeric(x, length = 10, cond1) <- 1:10\r\n```\r\n\r\n```\r\nError: value violates condition [function (x) mean(x) <= 5]\r\n```\r\n\r\nGeneral checking\r\n\r\n\r\n```r\r\ndeclare(x)\r\ncheck(x, class=\"integer\", length=10) <- 1:10\r\ncheck(x, class=\"numeric\", length=10) <- 1:10\r\n```\r\n\r\n```\r\nError: value [class = \"integer\"] violates condition [class = \"numeric\"]\r\n```\r\n\r\n## Help overview\r\n\r\n```r\r\nhelp(package = rtype)\r\n```\r\n\r\n## License\r\n\r\nThis package is under [MIT License](http://opensource.org/licenses/MIT).\r\n","google":"UA-47159422-1","note":"Don't delete this file! It's used internally to help with page regeneration."}